https://ethereum.github.io/browser-solidity/
->Contract

geth:
_clave = eth.coinbase
personal.unlock(eth.coinbase)
miner.start(1)

deploy KycClaveChain(excluding "var _clave = /*...*/")

 _kycClaveChain = kycclavechain_sol_kycclavechain.address

deploy CustomerInfo(excluding "var _kycClaveChain = /*...*/")

send get outer customer request:
{
    "jsonrpc": "2.0",
    "method": "eth_sendTransaction",
    "params": [{
        "to": "<Customer Info Address>",
        "from": "0xb83e3a75f67420571b3d52ae26c64489376e4e37",
        "gas": "0x300000",
        "data": "0x0676aade6162636465000000000000000000000000000000000000000000000000000000"
    }],
    "id": 1
}


check: kycclavechain_sol_kycclavechain.requests(0)

send send data request:
{
    "jsonrpc": "2.0",
    "method": "eth_sendTransaction",
    "params": [{
        "to": "<Kyc Clave Chain Address>",
        "from": "0xb83e3a75f67420571b3d52ae26c64489376e4e37",
        "gas": "0x300000",
        "data": "0xe385f7d20000000000000000000000000000000000000000000000000000000000000000616263646500000000000000000000000000000000000000000000000000000069696969696969690000000000000000000000000000000000000000000000003132333435363738000000000000000000000000000000000000000000000000"
    }],
    "id": 1
}

check: kycclavechain_sol_kycclavechain.requests(0) -> true
customerinfo_sol_customerinfo.customers("abcde")